I decided to use gRPC messaging service on a path between 'locations-generator'->to->'locations2kafka' microservices, as I explained in 'architecture_decisions.txt'.
The transfering message is location data:
### location.proto:
syntax = "proto3";

message LocationMessage {
  int32 id = 1;
  int32 person_id = 2;
  string longitude = 3;
  string latitude = 4;
  string creation_time = 5;
}

message Empty {

}

message LocationMessageList {
  repeated LocationMessage locations = 1;
}

service LocationService {
  rpc Get(Empty) returns (LocationMessageList);
  rpc Create(LocationMessage) returns (LocationMessage);
}

- the LocationService has 2 methods: Get() and Create(), I decided to include (for the purpose of future reuse of .proto manifest elsewhere), but didn't implement Get() method handler in my code of 'locations2kafka' service, as it doesn't fetch locations message list by its design role.
I've also integrated gRPC reflection service in my gRPC server in 'locations2kafka' microservice.

We can use grpcurl utility (https://github.com/fullstorydev/grpcurl) for making tests on a host where you implement your deployments.

### It will be useful if we open logs tailing of the 'locations2kafka' pod in a separate ssh/cli session:
sudo kubectl logs -f udaconnect-locations2kafka-7d88b8d88f-pp9ws

### Let's poll and see the description of LocationService service on our gRPC server:
~$ grpcurl -plaintext localhost:30005 list
LocationService
grpc.reflection.v1alpha.ServerReflection

$ grpcurl -plaintext localhost:30005 describe LocationService
LocationService is a service:
service LocationService {
  rpc Create ( .LocationMessage ) returns ( .LocationMessage );
  rpc Get ( .Empty ) returns ( .LocationMessageList );
}


### Let's send the message, a json formatted location data (as like a new record is being generated by 'locations-generator' microservice):
~$ grpcurl -plaintext -d '{"id": 106, "person_id": 9, "longitude": "-106.5719566", "latitude": "35.0585136", "creation_time": "2021-11-06T10:10:10"}' localhost:30005  LocationService.Create
{
  "id": 106,
  "person_id": 9,
  "longitude": "-106.5719566",
  "latitude": "35.0585136",
  "creation_time": "2021-11-06T10:10:10"
}

### here we go, 'locations2kafka' microservice got the message:
$ sudo kubectl logs -f udaconnect-locations2kafka-7d88b8d88f-pp9ws
INFO:__main__:11/15/2021, 17:18:16, Server starting on port 5005...
INFO:__main__:11/15/2021, 17:26:16, Received new location
{'id': 106, 'person_id': 9, 'longitude': '-106.5719566', 'latitude': '35.0585136', 'creation_time': '2021-11-06T10:10:10'}
INFO:__main__:11/15/2021, 17:26:16, Location data was sent to Kafka


